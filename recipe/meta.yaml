{% set version = "0.5.1.65" %}
{% set lib_version = version.split(".")[0]+"."+version.split(".")[1]+"."+version.split(".")[2] %}
{% set platform = "placeholder" %}  # [not (linux64 or aarch64)]
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-sbsa" %}    # [aarch64]
{% set extension = "tar.xz" %}

{% set cuda_compiler_version = cuda_compiler_version|default("None") %}
{% set cuda_major = environ.get("cuda_compiler_version", "13.0").split(".")[0] %}

package:
  name: libcublasmp-split
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cublasmp/redist/libcublasmp/{{ platform }}/libcublasmp-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}
  sha256: 3908e41201751339902262479659cdcef77b825ecc2a59ebb4cbf62a8e4068e6  # [linux64 and (cuda_compiler_version or "").startswith("12")]
  sha256: 373a7dbc57d9effc0751b6673bafd3fa7d67ddc5adfd81a4cf989e1552609263  # [linux64 and (cuda_compiler_version or "").startswith("13")]
  sha256: af43283b82a8787583ea3e2a667b5ac6df9dd644445c62df7375321440f86cce  # [aarch64 and (cuda_compiler_version or "").startswith("12")]
  sha256: c90dbec9103fa7da6c46e2355d9382f17e103b5a7014fd50234e7d3769c46405  # [aarch64 and (cuda_compiler_version or "").startswith("13")]

build:
  number: 0
  skip: true  # [cuda_compiler_version in (None, "None") or (cuda_compiler_version or "").startswith("11")]
  skip: true  # [not (linux64 or aarch64)]
  script:
    - check-glibc lib/*.so.*
    - cp -rv include $PREFIX
    - cp -rv lib $PREFIX

requirements:
  build:
    - cf-nvidia-tools 1   # [linux]

outputs:
  - name: libcublasmp
    build:
      ignore_run_exports:
        - cuda-version
      run_exports:
        - {{ pin_subpackage("libcublasmp", max_pin="x") }}
      missing_dso_whitelist:
        - "*libcuda.so*"
    files:
      - lib/libcublasmp.so.*
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_compiler_version }}
        - libcublas
        - nccl
        - libnvshmem3
      run:
        - {{ pin_compatible("cuda-version", max_pin="x") }}
        - libcublas
        - nccl
        - libnvshmem3
    test:
      commands:
        - test -L $PREFIX/lib/libcublasmp.so.0
        - test -f $PREFIX/lib/libcublasmp.so.{{ lib_version }}
    about:
      home: https://docs.nvidia.com/cuda/cublasmp/
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/cublasmp/license/index.html
      summary: NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
      description: |
        NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
        cuBLASMp is compatible with 2D block-cyclic data layout and provides PBLAS-like C APIs.
      doc_url: https://docs.nvidia.com/cuda/cublasmp/

  - name: libcublasmp-dev
    build:
      ignore_run_exports:
        - cuda-version
      run_exports:
        - {{ pin_subpackage("libcublasmp", max_pin="x") }}
    files:
      - lib/libcublasmp.so
      - include/cublasmp.h
    requirements:
      host:
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_subpackage("libcublasmp", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/include/cublasmp.h
        - test -L $PREFIX/lib/libcublasmp.so
    about:
      home: https://docs.nvidia.com/cuda/cublasmp/
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/cublasmp/license/index.html
      summary: NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
      description: |
        NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
        cuBLASMp is compatible with 2D block-cyclic data layout and provides PBLAS-like C APIs.
      doc_url: https://docs.nvidia.com/cuda/cublasmp/

about:
  home: https://docs.nvidia.com/cuda/cublasmp/
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/cuda/cublasmp/license/index.html
  summary: NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
  description: |
    NVIDIA cuBLASMp is a high performance, multi-process, GPU accelerated library for distributed basic dense linear algebra.
    cuBLASMp is compatible with 2D block-cyclic data layout and provides PBLAS-like C APIs.
  doc_url: https://docs.nvidia.com/cuda/cublasmp/

extra:
  recipe-maintainers:
    - almogsegal
    - mrogowski
    - conda-forge/cuda
  feedstock-name: libcublasmp
